version: 2
updates:
  # Go 依赖更新 - 使用 directories 简化配置
  - package-ecosystem: "gomod"
    directories:
      - "/server"
      - "/pkg"
      - "/coraza-spoa"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "08:00"
      timezone: "Asia/Shanghai"
    open-pull-requests-limit: 10
    labels:
      - "dependencies"
      - "go"
    commit-message:
      prefix: "chore"
      include: "scope"
    groups:
      # 将小版本和补丁更新合并到一个 PR
      go-minor-patch:
        applies-to: version-updates
        patterns:
          - "*"
        update-types:
          - "minor"
          - "patch"
      # 安全更新单独分组，优先处理
      go-security:
        applies-to: security-updates
        patterns:
          - "*"
    ignore:
      # 只忽略主要版本更新，允许小版本和补丁更新
      - dependency-name: "*"
        update-types: ["version-update:semver-major"]

  # 前端依赖更新（更灵活的策略）
  - package-ecosystem: "npm"
    directory: "/web"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "08:00"
      timezone: "Asia/Shanghai"
    open-pull-requests-limit: 10 # 增加限制，允许更多更新
    labels:
      - "dependencies"
      - "frontend"
      - "pnpm"
    commit-message:
      prefix: "chore"
      include: "scope"
    versioning-strategy: "increase-if-necessary"
    groups:
      # 关键框架分组 - 只限制主版本更新
      critical-frameworks:
        dependency-type: "production"
        patterns:
          - "react"
          - "react-dom"
          - "vite"
        update-types:
          - "minor"
          - "patch"

      # UI 库分组 - 允许更多更新
      ui-libraries:
        dependency-type: "production"
        patterns:
          - "@radix-ui/*"
          - "lucide-react"
          - "tailwind*"
        update-types:
          - "minor"
          - "patch"

      # 工具库分组 - 相对自由
      utilities:
        dependency-type: "production"
        patterns:
          - "axios"
          - "date-fns"
          - "clsx"
          - "immer"
          - "zod"
          - "*query*"
        update-types:
          - "minor"
          - "patch"

      # 开发工具分组 - 允许积极更新
      dev-tools:
        dependency-type: "development"
        patterns:
          - "typescript*"
          - "eslint*"
          - "@types/*"
          - "@vitejs/*"
          - "esbuild"
        update-types:
          - "minor"
          - "patch"

      # 安全更新优先处理
      security-updates:
        applies-to: security-updates
        patterns:
          - "*"

    ignore:
      # === 谨慎处理的主版本更新 ===
      - dependency-name: "*"
        update-types: ["version-update:semver-major"]

      # === 特定库的策略 ===
      # React 18 -> 19 需要手动测试，但允许 18.x 内的更新
      - dependency-name: "react"
        versions: [">= 19.0.0"]
      - dependency-name: "react-dom"
        versions: [">= 19.0.0"]

      # TypeScript 主版本更新需要谨慎
      - dependency-name: "typescript"
        versions: [">= 6.0.0"]

      # 3D 库需要谨慎处理
      - dependency-name: "three"
        update-types: ["version-update:semver-major"]
      - dependency-name: "three-globe"
        update-types: ["version-update:semver-major"]

  # GitHub Actions 更新
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "08:00"
      timezone: "Asia/Shanghai"
    open-pull-requests-limit: 5
    labels:
      - "dependencies"
      - "github-actions"
    commit-message:
      prefix: "ci"
      include: "scope"
    groups:
      github-actions:
        patterns:
          - "*"

  # Docker 基础镜像更新
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "08:00"
      timezone: "Asia/Shanghai"
    open-pull-requests-limit: 5
    labels:
      - "dependencies"
      - "docker"
    commit-message:
      prefix: "docker"
      include: "scope"
    ignore:
      # 只忽略主版本更新，允许补丁和小版本更新
      - dependency-name: "*"
        update-types: ["version-update:semver-major"]

      # === 构建环境版本锁定 ===
      # 锁定 HAProxy 版本在 3.0.10，防止自动更新
      - dependency-name: "haproxy"
        versions: [">3.0.10"] # 忽略所有高于 3.0.10 的版本

      # 锁定 Golang 版本在 1.24.1，确保后端构建环境一致性
      - dependency-name: "golang"
        versions: [">1.24.1"] # 忽略所有高于 1.24.1 的版本
